{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { BottomNavigationItem } from \"./BottomNavigationItem\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n/**\r\n * A bottom navigation component that displays a set of items as icons or custom content.\r\n *\r\n * @typedef {Object} BottomNavigationItem\r\n * @property {string=} title - The title text to display for the item.\r\n * @property {JSX.Element=} icon - The icon to display for the item.\r\n * @property {JSX.Element=} activeIcon - The icon to display when the item is active.\r\n * @property {function(params: {isActive: boolean, id: number}): JSX.Element=} render - A custom render method to use for the item to display.\r\n * @property {function(params: {id: number, [key: string]: any}): void=} onClick - A callback function to execute when the item is clicked.\r\n * @property {Object.<string, *>} [key] - Additional props to pass to the item component.\r\n *\r\n * @typedef {Object} BottomNavigationProps\r\n * @property {BottomNavigationItem[]} items - The array of items to display in the navigation.\r\n * @property {number|null=} selected - The index of the currently selected item.\r\n * @property {function(params: {id: number, [key: string]: any}): void=} onItemClick - A callback function to execute when an item is clicked.\r\n * @property {boolean=} noActiveBg - Whether to disable the background color for the active item.\r\n * @property {string=} activeBgColor - The background color to use for the active item.\r\n * @property {string=} activeTextColor - The text color to use for the active item.\r\n *\r\n * @param {BottomNavigationProps} props - The component props.\r\n * @returns {JSX.Element} - The rendered component.\r\n */\nexport var BottomNavigation = function (_a) {\n  var items = _a.items,\n    _b = _a.selected,\n    selected = _b === void 0 ? null : _b,\n    onItemClick = _a.onItemClick,\n    activeBgColor = _a.activeBgColor,\n    activeTextColor = _a.activeTextColor;\n  var _c = useState(selected),\n    current = _c[0],\n    setCurrent = _c[1];\n  useEffect(function () {\n    setCurrent(selected);\n  }, [selected]);\n  // determine active styles\n  function getItemStyle() {\n    var style = {};\n    if (activeBgColor) {\n      style.backgroundColor = activeBgColor;\n      style.color = activeTextColor || \"black\";\n    }\n    return style;\n  }\n  function handleItemClick(idx, item) {\n    setCurrent(idx);\n    if (item.onClick) {\n      item.onClick(__assign({\n        id: idx\n      }, item));\n    }\n    if (onItemClick) {\n      onItemClick(__assign({\n        id: idx\n      }, item));\n    }\n  }\n  // if a custom render method is provided use it, otherwise use the default icon and title\n  var navItems = items.map(function (item, idx) {\n    return _jsx(BottomNavigationItem, {\n      current: current,\n      item: item,\n      id: idx,\n      getItemStyle: getItemStyle,\n      onClick: handleItemClick\n    }, \"bottom-nav-item-\".concat(idx));\n  });\n  return _jsx(\"div\", __assign({\n    className: \"bottom-nav\"\n  }, {\n    children: navItems\n  }));\n};","map":{"version":3,"names":["jsx","_jsx","useState","useEffect","BottomNavigationItem","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","BottomNavigation","_a","items","_b","selected","onItemClick","activeBgColor","activeTextColor","_c","current","setCurrent","getItemStyle","style","backgroundColor","color","handleItemClick","idx","item","onClick","id","navItems","map","concat","className","children"],"sources":["/Users/charupatelbaghi/ares-elite/node_modules/reactjs-bottom-navigation/lib/esm/BottomNavigation.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { BottomNavigationItem } from \"./BottomNavigationItem\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n/**\r\n * A bottom navigation component that displays a set of items as icons or custom content.\r\n *\r\n * @typedef {Object} BottomNavigationItem\r\n * @property {string=} title - The title text to display for the item.\r\n * @property {JSX.Element=} icon - The icon to display for the item.\r\n * @property {JSX.Element=} activeIcon - The icon to display when the item is active.\r\n * @property {function(params: {isActive: boolean, id: number}): JSX.Element=} render - A custom render method to use for the item to display.\r\n * @property {function(params: {id: number, [key: string]: any}): void=} onClick - A callback function to execute when the item is clicked.\r\n * @property {Object.<string, *>} [key] - Additional props to pass to the item component.\r\n *\r\n * @typedef {Object} BottomNavigationProps\r\n * @property {BottomNavigationItem[]} items - The array of items to display in the navigation.\r\n * @property {number|null=} selected - The index of the currently selected item.\r\n * @property {function(params: {id: number, [key: string]: any}): void=} onItemClick - A callback function to execute when an item is clicked.\r\n * @property {boolean=} noActiveBg - Whether to disable the background color for the active item.\r\n * @property {string=} activeBgColor - The background color to use for the active item.\r\n * @property {string=} activeTextColor - The text color to use for the active item.\r\n *\r\n * @param {BottomNavigationProps} props - The component props.\r\n * @returns {JSX.Element} - The rendered component.\r\n */\r\nexport var BottomNavigation = function (_a) {\r\n    var items = _a.items, _b = _a.selected, selected = _b === void 0 ? null : _b, onItemClick = _a.onItemClick, activeBgColor = _a.activeBgColor, activeTextColor = _a.activeTextColor;\r\n    var _c = useState(selected), current = _c[0], setCurrent = _c[1];\r\n    useEffect(function () {\r\n        setCurrent(selected);\r\n    }, [selected]);\r\n    // determine active styles\r\n    function getItemStyle() {\r\n        var style = {};\r\n        if (activeBgColor) {\r\n            style.backgroundColor = activeBgColor;\r\n            style.color = activeTextColor || \"black\";\r\n        }\r\n        return style;\r\n    }\r\n    function handleItemClick(idx, item) {\r\n        setCurrent(idx);\r\n        if (item.onClick) {\r\n            item.onClick(__assign({ id: idx }, item));\r\n        }\r\n        if (onItemClick) {\r\n            onItemClick(__assign({ id: idx }, item));\r\n        }\r\n    }\r\n    // if a custom render method is provided use it, otherwise use the default icon and title\r\n    var navItems = items.map(function (item, idx) {\r\n        return (_jsx(BottomNavigationItem, { current: current, item: item, id: idx, getItemStyle: getItemStyle, onClick: handleItemClick }, \"bottom-nav-item-\".concat(idx)));\r\n    });\r\n    return _jsx(\"div\", __assign({ className: \"bottom-nav\" }, { children: navItems }));\r\n};\r\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,aAAa;AACpB,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,IAAIC,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIO,gBAAgB,GAAG,SAAAA,CAAUC,EAAE,EAAE;EACxC,IAAIC,KAAK,GAAGD,EAAE,CAACC,KAAK;IAAEC,EAAE,GAAGF,EAAE,CAACG,QAAQ;IAAEA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;IAAEE,WAAW,GAAGJ,EAAE,CAACI,WAAW;IAAEC,aAAa,GAAGL,EAAE,CAACK,aAAa;IAAEC,eAAe,GAAGN,EAAE,CAACM,eAAe;EAClL,IAAIC,EAAE,GAAGzB,QAAQ,CAACqB,QAAQ,CAAC;IAAEK,OAAO,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,UAAU,GAAGF,EAAE,CAAC,CAAC,CAAC;EAChExB,SAAS,CAAC,YAAY;IAClB0B,UAAU,CAACN,QAAQ,CAAC;EACxB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACd;EACA,SAASO,YAAYA,CAAA,EAAG;IACpB,IAAIC,KAAK,GAAG,CAAC,CAAC;IACd,IAAIN,aAAa,EAAE;MACfM,KAAK,CAACC,eAAe,GAAGP,aAAa;MACrCM,KAAK,CAACE,KAAK,GAAGP,eAAe,IAAI,OAAO;IAC5C;IACA,OAAOK,KAAK;EAChB;EACA,SAASG,eAAeA,CAACC,GAAG,EAAEC,IAAI,EAAE;IAChCP,UAAU,CAACM,GAAG,CAAC;IACf,IAAIC,IAAI,CAACC,OAAO,EAAE;MACdD,IAAI,CAACC,OAAO,CAAChC,QAAQ,CAAC;QAAEiC,EAAE,EAAEH;MAAI,CAAC,EAAEC,IAAI,CAAC,CAAC;IAC7C;IACA,IAAIZ,WAAW,EAAE;MACbA,WAAW,CAACnB,QAAQ,CAAC;QAAEiC,EAAE,EAAEH;MAAI,CAAC,EAAEC,IAAI,CAAC,CAAC;IAC5C;EACJ;EACA;EACA,IAAIG,QAAQ,GAAGlB,KAAK,CAACmB,GAAG,CAAC,UAAUJ,IAAI,EAAED,GAAG,EAAE;IAC1C,OAAQlC,IAAI,CAACG,oBAAoB,EAAE;MAAEwB,OAAO,EAAEA,OAAO;MAAEQ,IAAI,EAAEA,IAAI;MAAEE,EAAE,EAAEH,GAAG;MAAEL,YAAY,EAAEA,YAAY;MAAEO,OAAO,EAAEH;IAAgB,CAAC,EAAE,kBAAkB,CAACO,MAAM,CAACN,GAAG,CAAC,CAAC;EACvK,CAAC,CAAC;EACF,OAAOlC,IAAI,CAAC,KAAK,EAAEI,QAAQ,CAAC;IAAEqC,SAAS,EAAE;EAAa,CAAC,EAAE;IAAEC,QAAQ,EAAEJ;EAAS,CAAC,CAAC,CAAC;AACrF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}