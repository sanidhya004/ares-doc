{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Form}from\"react-bootstrap\";import{useDispatch}from\"react-redux\";import{useLocation,useNavigate}from\"react-router-dom\";import{toast}from\"react-toastify\";import{ResetPassword}from\"../../../features/apiCall\";import AuthLayout from\"../AuthLayout\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ErrorToastOptions={position:\"bottom-center\",autoClose:3000,pauseOnHover:true,draggable:true,theme:\"dark\"};const UpdatePassword=()=>{const location=useLocation();const dispatch=useDispatch();const navigate=useNavigate();const email=location.state;useEffect(()=>{if(!email){// Navigate to forgot-password page if email is not available\nnavigate(\"/forgot-password\");}},[email]);const[values,setValues]=useState({newPassword:\"\",confirmPassword:\"\"});const handlePwdChange=e=>{setValues({...values,[e.target.name]:e.target.value});};const handleValidation=()=>{const{newPassword,confirmPassword}=values;if(newPassword.length<8){toast.error(\"Password must contain 8 characters.\",ErrorToastOptions);return false;}else if(confirmPassword!==confirmPassword){toast.error(\"Passwords do not match.\",ErrorToastOptions);return false;}return true;};const handlePwdSubmit=async e=>{e.preventDefault();const{newPassword,confirmPassword}=values;if(handleValidation()){if(await ResetPassword(dispatch,{email,newPassword,confirmPassword})){navigate(\"/\");setValues({newPassword:\"\",confirmPassword:\"\"});}}};return/*#__PURE__*/_jsxs(AuthLayout,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"forgot-password\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-4 font-weight-bold\",children:\"Change Password\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-1 mt-4 email ml-1\",children:\"Type your new password to continue\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handlePwdSubmit,children:[/*#__PURE__*/_jsx(Form.Control,{type:\"password\",onChange:handlePwdChange,name:\"newPassword\",required:true,value:values===null||values===void 0?void 0:values.newPassword,className:\"mb-3\"}),/*#__PURE__*/_jsx(Form.Control,{className:\"mb-3\",type:\"password\",onChange:handlePwdChange,name:\"confirmPassword\",required:true,value:values===null||values===void 0?void 0:values.confirmPassword}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"purple-button w-100\",children:[\"Change Password\",\" \"]})]})]}),/*#__PURE__*/_jsx(\"section\",{className:\"illustration-container\",children:/*#__PURE__*/_jsx(\"img\",{src:\"images/UpdatePassword.png\",className:\"illustration\",style:{width:\"auto\",height:\"200px\"}})})]});};export default UpdatePassword;","map":{"version":3,"names":["React","useEffect","useState","Form","useDispatch","useLocation","useNavigate","toast","ResetPassword","AuthLayout","jsx","_jsx","jsxs","_jsxs","ErrorToastOptions","position","autoClose","pauseOnHover","draggable","theme","UpdatePassword","location","dispatch","navigate","email","state","values","setValues","newPassword","confirmPassword","handlePwdChange","e","target","name","value","handleValidation","length","error","handlePwdSubmit","preventDefault","children","className","onSubmit","Control","type","onChange","required","src","style","width","height"],"sources":["/Users/charupatelbaghi/ares-elite/src/components/auth/password/UpdatePassword.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { ResetPassword } from \"../../../features/apiCall\";\nimport AuthLayout from \"../AuthLayout\";\nconst ErrorToastOptions = {\n  position: \"bottom-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"dark\",\n};\nconst UpdatePassword = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const email = location.state;\n  useEffect(() => {\n    if (!email) {\n      // Navigate to forgot-password page if email is not available\n      navigate(\"/forgot-password\");\n    }\n  }, [email]);\n\n  const [values, setValues] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n  });\n  const handlePwdChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleValidation = () => {\n    const { newPassword, confirmPassword } = values;\n\n    if (newPassword.length < 8) {\n      toast.error(\"Password must contain 8 characters.\", ErrorToastOptions);\n      return false;\n    } else if (confirmPassword !== confirmPassword) {\n      toast.error(\"Passwords do not match.\", ErrorToastOptions);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handlePwdSubmit = async (e) => {\n    e.preventDefault();\n\n    const { newPassword, confirmPassword } = values;\n\n    if (handleValidation()) {\n      if (\n        await ResetPassword(dispatch, { email, newPassword, confirmPassword })\n      ) {\n        navigate(\"/\");\n        setValues({\n          newPassword: \"\",\n          confirmPassword: \"\",\n        });\n      }\n    }\n  };\n  return (\n    <AuthLayout>\n      <section className=\"forgot-password\">\n        <h3 className=\"mb-4 font-weight-bold\">Change Password</h3>\n        <p className=\"mb-1 mt-4 email ml-1\">\n          Type your new password to continue\n        </p>\n        <Form onSubmit={handlePwdSubmit}>\n          <Form.Control\n            type=\"password\"\n            onChange={handlePwdChange}\n            name=\"newPassword\"\n            required\n            value={values?.newPassword}\n            className=\"mb-3\"\n          />\n          <Form.Control\n            className=\"mb-3\"\n            type=\"password\"\n            onChange={handlePwdChange}\n            name=\"confirmPassword\"\n            required\n            value={values?.confirmPassword}\n          />\n\n          <button type=\"submit\" className=\"purple-button w-100\">\n            Change Password{\" \"}\n          </button>\n        </Form>\n      </section>\n      <section className=\"illustration-container\">\n        <img\n          src=\"images/UpdatePassword.png\"\n          className=\"illustration\"\n          style={{ width: \"auto\", height: \"200px\" }}\n        />\n      </section>\n    </AuthLayout>\n  );\n};\n\nexport default UpdatePassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}