{"ast":null,"code":"import React,{useState}from\"react\";import{Button,Form,Spinner}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{useNavigate}from\"react-router-dom\";import{VerifyAthelete}from\"../../features/apiCall\";import\"../../styles/modal.css\";import BootstrapModal from\"./Components/BootstrapModal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const DoctorSelectUser=()=>{const{isFetching}=useSelector(state=>state.auth);const[selectedUserType,setSelectedUserType]=useState(\"\");const[showModal,setShowModal]=useState(false);const navigate=useNavigate();const dispatch=useDispatch();const handleSubmit=e=>{e.preventDefault();// Prevent the default form submission\nif(selectedUserType===\"New\"){navigate(\"/doctor/dashboard/doctor-service-selection\");}else if(selectedUserType===\"Existing\"){console.log(\"modal opened for verification\");setShowModal(true);}};const handleUserTypeChange=event=>{setSelectedUserType(event.target.value);};const handleVerification=async email=>{console.log(email);try{await VerifyAthelete(dispatch,{email});}catch(error){alert(error);}setShowModal(false);// Close the modal after verification\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"text-center d-flex flex-column justify-content-center align-items-center select-user\",style:{gap:\"24px\",width:\"40%\"},children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/areseliteLogo.png\",width:100,alt:\"logo\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"Please select Type of user\"}),/*#__PURE__*/_jsxs(Form,{className:\"d-flex flex-wrap justify-content-center \",style:{gap:\"24px\"},onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"newUser\",label:\"New\",value:\"New\",checked:selectedUserType===\"New\",onChange:handleUserTypeChange,className:\"doctor-user \".concat(selectedUserType===\"New\"?\"checked\":\"\")}),/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"existingUser\",label:\"Existing\",value:\"Existing\",checked:selectedUserType===\"Existing\",onChange:handleUserTypeChange,className:\"doctor-user \".concat(selectedUserType===\"Existing\"?\"checked\":\"\")}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"purple-button \",style:{width:\"332px\",height:\"62px\"},disabled:!selectedUserType,children:\"Continue\"})]})]}),/*#__PURE__*/_jsx(BootstrapModal,{showModal:showModal,handleClose:()=>setShowModal(false),modalTitle:\"Please enter email to verify\",modalContent:/*#__PURE__*/_jsx(ModalContent,{handleClose:()=>setShowModal(false),handleVerification:handleVerification}),className:\"verification-athelete\"})]});};export default DoctorSelectUser;const ModalContent=_ref=>{let{handleClose,handleVerification}=_ref;const[email,setEmail]=useState(\"\");const{isFetching}=useSelector(state=>state.auth);const handleSubmit=e=>{e.preventDefault();handleVerification(email);};return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Form.Control,{type:\"email\",name:\"email\",placeholder:\"Enter Existing Email ID\",onChange:e=>setEmail(e.target.value),value:email,className:\"mb-3 \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleClose,className:\"bt-2 w-25\",children:\"Close\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bt-2 w-25 bt-3\",children:isFetching?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Spinner,{size:\"sm\",animation:\"border\"})}):/*#__PURE__*/_jsx(_Fragment,{children:\"Verify\"})})]})});};","map":{"version":3,"names":["React","useState","Button","Form","Spinner","useDispatch","useSelector","useNavigate","VerifyAthelete","BootstrapModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DoctorSelectUser","isFetching","state","auth","selectedUserType","setSelectedUserType","showModal","setShowModal","navigate","dispatch","handleSubmit","e","preventDefault","console","log","handleUserTypeChange","event","target","value","handleVerification","email","error","alert","children","className","style","gap","width","src","alt","onSubmit","Check","type","id","label","checked","onChange","concat","height","disabled","handleClose","modalTitle","modalContent","ModalContent","_ref","setEmail","Control","name","placeholder","onClick","size","animation"],"sources":["/Users/charupatelbaghi/ares-elite/src/components/layout/DoctorSelectUser.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Spinner } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { VerifyAthelete } from \"../../features/apiCall\";\nimport \"../../styles/modal.css\";\nimport BootstrapModal from \"./Components/BootstrapModal\";\n\nconst DoctorSelectUser = () => {\n  const { isFetching } = useSelector((state) => state.auth);\n  const [selectedUserType, setSelectedUserType] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent the default form submission\n    if (selectedUserType === \"New\") {\n      navigate(\"/doctor/dashboard/doctor-service-selection\");\n    } else if (selectedUserType === \"Existing\") {\n      console.log(\"modal opened for verification\");\n      setShowModal(true);\n    }\n  };\n\n  const handleUserTypeChange = (event) => {\n    setSelectedUserType(event.target.value);\n  };\n\n  const handleVerification = async (email) => {\n    console.log(email);\n    try {\n      await VerifyAthelete(dispatch, { email });\n    } catch (error) {\n      alert(error);\n    }\n    setShowModal(false); // Close the modal after verification\n  };\n\n  return (\n    <>\n      <section\n        className=\"text-center d-flex flex-column justify-content-center align-items-center select-user\"\n        style={{ gap: \"24px\", width: \"40%\" }}\n      >\n        <img src=\"/images/areseliteLogo.png\" width={100} alt=\"logo\" />\n        <h5>Please select Type of user</h5>\n        <Form\n          className=\"d-flex flex-wrap justify-content-center \"\n          style={{ gap: \"24px\" }}\n          onSubmit={handleSubmit}\n        >\n          <Form.Check\n            type=\"radio\"\n            id=\"newUser\"\n            label=\"New\"\n            value=\"New\"\n            checked={selectedUserType === \"New\"}\n            onChange={handleUserTypeChange}\n            className={`doctor-user ${\n              selectedUserType === \"New\" ? \"checked\" : \"\"\n            }`}\n          />\n\n          <Form.Check\n            type=\"radio\"\n            id=\"existingUser\"\n            label=\"Existing\"\n            value=\"Existing\"\n            checked={selectedUserType === \"Existing\"}\n            onChange={handleUserTypeChange}\n            className={`doctor-user ${\n              selectedUserType === \"Existing\" ? \"checked\" : \"\"\n            }`}\n          />\n\n          <Button\n            type=\"submit\"\n            className=\"purple-button \"\n            style={{ width: \"332px\", height: \"62px\" }}\n            disabled={!selectedUserType}\n          >\n            Continue\n          </Button>\n        </Form>\n      </section>\n      <BootstrapModal\n        showModal={showModal}\n        handleClose={() => setShowModal(false)}\n        modalTitle={\"Please enter email to verify\"}\n        modalContent={\n          <ModalContent\n            handleClose={() => setShowModal(false)}\n            handleVerification={handleVerification}\n          />\n        }\n        className=\"verification-athelete\"\n      />\n    </>\n  );\n};\n\nexport default DoctorSelectUser;\nconst ModalContent = ({ handleClose, handleVerification }) => {\n  const [email, setEmail] = useState(\"\");\n  const { isFetching } = useSelector((state) => state.auth);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleVerification(email);\n  };\n\n  return (\n    <section>\n      <Form onSubmit={handleSubmit}>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter Existing Email ID\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          className=\"mb-3 \"\n        />\n        <button type=\"button\" onClick={handleClose} className=\"bt-2 w-25\">\n          Close\n        </button>\n\n        <button type=\"submit\" className=\"bt-2 w-25 bt-3\">\n          {isFetching ? (\n            <>\n              <Spinner size=\"sm\" animation=\"border\" />\n            </>\n          ) : (\n            <>Verify</>\n          )}\n        </button>\n      </Form>\n    </section>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}