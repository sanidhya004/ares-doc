{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport axios from \"../utils/axios.js\";\nimport { parseError } from \"../utils/parseError.js\";\nimport { Failure, loginFailure, loginStart, loginSuccess, Start, Success } from \"./authSlice.js\";\nconst ErrorToastOptions = {\n  position: \"bottom-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"dark\"\n};\nconst successToastOptions = {\n  position: \"top-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"light\"\n};\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  const {\n    email,\n    password\n  } = user;\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/doctor/login\", {\n      email,\n      password\n    });\n    // console.log(data);\n    toast.success(\"Logged in Sucessfully!\", successToastOptions);\n    dispatch(loginSuccess(data));\n  } catch (error) {\n    const errorMessage = parseError(error);\n    toast.error(errorMessage, ErrorToastOptions);\n    dispatch(loginFailure(errorMessage));\n  }\n};\nexport const SendOtp = async (dispatch, email) => {\n  dispatch(Start());\n  // const { email } = email;\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/doctor/send-forgot-password-code\", email);\n    // console.log(data);\n    toast.success(\"OTP Sent!\", successToastOptions);\n    dispatch(Success(data));\n    return true;\n  } catch (error) {\n    console.log(error);\n    const errorMessage = parseError(error);\n    toast.error(errorMessage, ErrorToastOptions);\n    dispatch(Failure(errorMessage));\n    return false;\n  }\n};\n_c = SendOtp;\nexport const VerifyOtp = async (dispatch, data) => {\n  dispatch(Start());\n  const {\n    email,\n    otp\n  } = email;\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/doctor/send-forgot-password-code\", email);\n    // console.log(data);\n    toast.success(\"OTP Sent!\", successToastOptions);\n    dispatch(Success(data));\n    return true;\n  } catch (error) {\n    console.log(error);\n    const errorMessage = parseError(error);\n    toast.error(errorMessage, ErrorToastOptions);\n    dispatch(Failure(errorMessage));\n    return false;\n  }\n};\n_c2 = VerifyOtp;\nvar _c, _c2;\n$RefreshReg$(_c, \"SendOtp\");\n$RefreshReg$(_c2, \"VerifyOtp\");","map":{"version":3,"names":["toast","axios","parseError","Failure","loginFailure","loginStart","loginSuccess","Start","Success","ErrorToastOptions","position","autoClose","pauseOnHover","draggable","theme","successToastOptions","login","dispatch","user","email","password","data","post","success","error","errorMessage","SendOtp","console","log","_c","VerifyOtp","otp","_c2","$RefreshReg$"],"sources":["/Users/charupatelbaghi/ares-elite/src/features/apiCall.js"],"sourcesContent":["import { toast } from \"react-toastify\";\nimport axios from \"../utils/axios.js\";\nimport { parseError } from \"../utils/parseError.js\";\nimport {\n  Failure,\n  loginFailure,\n  loginStart,\n  loginSuccess,\n  Start,\n  Success,\n} from \"./authSlice.js\";\n\nconst ErrorToastOptions = {\n  position: \"bottom-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"dark\",\n};\nconst successToastOptions = {\n  position: \"top-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"light\",\n};\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  const { email, password } = user;\n\n  try {\n    const { data } = await axios.post(\"/api/doctor/login\", { email, password });\n    // console.log(data);\n    toast.success(\"Logged in Sucessfully!\", successToastOptions);\n    dispatch(loginSuccess(data));\n  } catch (error) {\n    const errorMessage = parseError(error);\n    toast.error(errorMessage, ErrorToastOptions);\n    dispatch(loginFailure(errorMessage));\n  }\n};\nexport const SendOtp = async (dispatch, email) => {\n  dispatch(Start());\n  // const { email } = email;\n\n  try {\n    const { data } = await axios.post(\n      \"/api/doctor/send-forgot-password-code\",\n      email\n    );\n    // console.log(data);\n    toast.success(\"OTP Sent!\", successToastOptions);\n    dispatch(Success(data));\n    return true;\n  } catch (error) {\n    console.log(error);\n    const errorMessage = parseError(error);\n    toast.error(errorMessage, ErrorToastOptions);\n    dispatch(Failure(errorMessage));\n    return false;\n  }\n};\nexport const VerifyOtp = async (dispatch, data) => {\n  dispatch(Start());\n  const { email, otp } = email;\n\n  try {\n    const { data } = await axios.post(\n      \"/api/doctor/send-forgot-password-code\",\n      email\n    );\n    // console.log(data);\n    toast.success(\"OTP Sent!\", successToastOptions);\n    dispatch(Success(data));\n    return true;\n  } catch (error) {\n    console.log(error);\n    const errorMessage = parseError(error);\n    toast.error(errorMessage, ErrorToastOptions);\n    dispatch(Failure(errorMessage));\n    return false;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}