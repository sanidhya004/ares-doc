{"ast":null,"code":"import React,{useState}from\"react\";import{Button}from\"react-bootstrap\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const DoctorSelectUser=()=>{const[selectedUserType,setSelectedUserType]=useState(\"\");const navigate=useNavigate;const handleSubmit=()=>{if(selectedUserType===\"New\"){// Navigate to /doctor/dashboard/doctor-service-selection for new user\nnavigate(\"/doctor/dashboard/doctor-service-selection\");}else if(selectedUserType===\"Existing\"){// Open the modal for existing user verification\n// You should have a function to handle modal opening in your code\n// For example, openModal('Title', 'Footer');\nconsole.log(\"modal opened for verification\");}};const handleUserTypeChange=userType=>{setSelectedUserType(userType);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"section\",{className:\"text-center d-flex flex-column justify-content-center align-items-center \",style:{gap:\"24px\",width:\"40%\"},children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/areseliteLogo.png\",width:100,alt:\"logo\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"Please select Type of user\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-wrap justify-content-center \",style:{gap:\"24px\"},children:[/*#__PURE__*/_jsx(\"button\",{className:\"doctor-user-type \".concat(selectedUserType===\"New\"?\"selected\":\"\"),onClick:()=>handleUserTypeChange(\"New\"),children:\"New\"}),/*#__PURE__*/_jsx(\"button\",{className:\"doctor-user-type \".concat(selectedUserType===\"Existing\"?\"selected\":\"\"),onClick:()=>handleUserTypeChange(\"Existing\"),children:\"Existing\"})]}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,className:\"purple-button \",style:{width:\"332px\",height:\"62px\"},children:\"Continue\"})]})});};export default DoctorSelectUser;","map":{"version":3,"names":["React","useState","Button","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DoctorSelectUser","selectedUserType","setSelectedUserType","navigate","handleSubmit","console","log","handleUserTypeChange","userType","children","className","style","gap","width","src","alt","concat","onClick","height"],"sources":["/Users/charupatelbaghi/ares-elite/src/components/layout/DoctorSelectUser.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst DoctorSelectUser = () => {\n  const [selectedUserType, setSelectedUserType] = useState(\"\");\n  const navigate = useNavigate;\n  const handleSubmit = () => {\n    if (selectedUserType === \"New\") {\n      // Navigate to /doctor/dashboard/doctor-service-selection for new user\n      navigate(\"/doctor/dashboard/doctor-service-selection\");\n    } else if (selectedUserType === \"Existing\") {\n      // Open the modal for existing user verification\n      // You should have a function to handle modal opening in your code\n      // For example, openModal('Title', 'Footer');\n      console.log(\"modal opened for verification\");\n    }\n  };\n  const handleUserTypeChange = (userType) => {\n    setSelectedUserType(userType);\n  };\n  return (\n    <>\n      <section\n        className=\"text-center d-flex flex-column justify-content-center align-items-center \"\n        style={{ gap: \"24px\", width: \"40%\" }}\n      >\n        <img src=\"/images/areseliteLogo.png\" width={100} alt=\"logo\" />\n        <h5>Please select Type of user</h5>\n\n        <div\n          className=\"d-flex flex-wrap justify-content-center \"\n          style={{ gap: \"24px\" }}\n        >\n          <button\n            className={`doctor-user-type ${\n              selectedUserType === \"New\" ? \"selected\" : \"\"\n            }`}\n            onClick={() => handleUserTypeChange(\"New\")}\n          >\n            New\n          </button>\n          <button\n            className={`doctor-user-type ${\n              selectedUserType === \"Existing\" ? \"selected\" : \"\"\n            }`}\n            onClick={() => handleUserTypeChange(\"Existing\")}\n          >\n            Existing\n          </button>\n        </div>\n        <Button\n          onClick={handleSubmit}\n          className=\"purple-button \"\n          style={{ width: \"332px\", height: \"62px\" }}\n        >\n          Continue\n        </Button>\n      </section>\n    </>\n  );\n};\n\nexport default DoctorSelectUser;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,KAAQ,iBAAiB,CACxC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE/C,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAAAY,QAAQ,CAAGV,WAAW,CAC5B,KAAM,CAAAW,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAIH,gBAAgB,GAAK,KAAK,CAAE,CAC9B;AACAE,QAAQ,CAAC,4CAA4C,CAAC,CACxD,CAAC,IAAM,IAAIF,gBAAgB,GAAK,UAAU,CAAE,CAC1C;AACA;AACA;AACAI,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC9C,CACF,CAAC,CACD,KAAM,CAAAC,oBAAoB,CAAIC,QAAQ,EAAK,CACzCN,mBAAmB,CAACM,QAAQ,CAAC,CAC/B,CAAC,CACD,mBACEb,IAAA,CAAAI,SAAA,EAAAU,QAAA,cACEZ,KAAA,YACEa,SAAS,CAAC,2EAA2E,CACrFC,KAAK,CAAE,CAAEC,GAAG,CAAE,MAAM,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAJ,QAAA,eAErCd,IAAA,QAAKmB,GAAG,CAAC,2BAA2B,CAACD,KAAK,CAAE,GAAI,CAACE,GAAG,CAAC,MAAM,CAAE,CAAC,cAC9DpB,IAAA,OAAAc,QAAA,CAAI,4BAA0B,CAAI,CAAC,cAEnCZ,KAAA,QACEa,SAAS,CAAC,0CAA0C,CACpDC,KAAK,CAAE,CAAEC,GAAG,CAAE,MAAO,CAAE,CAAAH,QAAA,eAEvBd,IAAA,WACEe,SAAS,qBAAAM,MAAA,CACPf,gBAAgB,GAAK,KAAK,CAAG,UAAU,CAAG,EAAE,CAC3C,CACHgB,OAAO,CAAEA,CAAA,GAAMV,oBAAoB,CAAC,KAAK,CAAE,CAAAE,QAAA,CAC5C,KAED,CAAQ,CAAC,cACTd,IAAA,WACEe,SAAS,qBAAAM,MAAA,CACPf,gBAAgB,GAAK,UAAU,CAAG,UAAU,CAAG,EAAE,CAChD,CACHgB,OAAO,CAAEA,CAAA,GAAMV,oBAAoB,CAAC,UAAU,CAAE,CAAAE,QAAA,CACjD,UAED,CAAQ,CAAC,EACN,CAAC,cACNd,IAAA,CAACH,MAAM,EACLyB,OAAO,CAAEb,YAAa,CACtBM,SAAS,CAAC,gBAAgB,CAC1BC,KAAK,CAAE,CAAEE,KAAK,CAAE,OAAO,CAAEK,MAAM,CAAE,MAAO,CAAE,CAAAT,QAAA,CAC3C,UAED,CAAQ,CAAC,EACF,CAAC,CACV,CAAC,CAEP,CAAC,CAED,cAAe,CAAAT,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}