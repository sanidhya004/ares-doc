{"ast":null,"code":"import axios from \"../utils/axios.js\";\n// import { parseError } from \"../utils/parseError.js\";\n\nimport { loginFailure, loginStart, loginSuccess } from \"./authSlice.js\";\nimport { parseError } from \"./parseError.js\";\nconst ErrorToastOptions = {\n  position: \"bottom-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"dark\"\n};\nconst successToastOptions = {\n  position: \"top-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"light\"\n};\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  const {\n    email,\n    password\n  } = user;\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/doctor/login\", {\n      email,\n      password\n    });\n    dispatch(loginSuccess(data));\n  } catch (error) {\n    const errorMessage = parseError(error);\n    dispatch(loginFailure(errorMessage));\n  }\n};","map":{"version":3,"names":["axios","loginFailure","loginStart","loginSuccess","parseError","ErrorToastOptions","position","autoClose","pauseOnHover","draggable","theme","successToastOptions","login","dispatch","user","email","password","data","post","error","errorMessage"],"sources":["/Users/charupatelbaghi/ares-elite/src/features/apiCall.js"],"sourcesContent":["import axios from \"../utils/axios.js\";\n// import { parseError } from \"../utils/parseError.js\";\n\nimport { loginFailure, loginStart, loginSuccess } from \"./authSlice.js\";\nimport { parseError } from \"./parseError.js\";\n\nconst ErrorToastOptions = {\n  position: \"bottom-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"dark\",\n};\nconst successToastOptions = {\n  position: \"top-center\",\n  autoClose: 3000,\n  pauseOnHover: true,\n  draggable: true,\n  theme: \"light\",\n};\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  const { email, password } = user;\n\n  try {\n    const { data } = await axios.post(\"/api/doctor/login\", { email, password });\n\n    dispatch(loginSuccess(data));\n  } catch (error) {\n    const errorMessage = parseError(error);\n    dispatch(loginFailure(errorMessage));\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC;;AAEA,SAASC,YAAY,EAAEC,UAAU,EAAEC,YAAY,QAAQ,gBAAgB;AACvE,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,MAAMC,iBAAiB,GAAG;EACxBC,QAAQ,EAAE,eAAe;EACzBC,SAAS,EAAE,IAAI;EACfC,YAAY,EAAE,IAAI;EAClBC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,mBAAmB,GAAG;EAC1BL,QAAQ,EAAE,YAAY;EACtBC,SAAS,EAAE,IAAI;EACfC,YAAY,EAAE,IAAI;EAClBC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE;AACT,CAAC;AACD,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,KAAK;EAC7CD,QAAQ,CAACX,UAAU,CAAC,CAAC,CAAC;EAEtB,MAAM;IAAEa,KAAK;IAAEC;EAAS,CAAC,GAAGF,IAAI;EAEhC,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,mBAAmB,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IAE3EH,QAAQ,CAACV,YAAY,CAACc,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMC,YAAY,GAAGhB,UAAU,CAACe,KAAK,CAAC;IACtCN,QAAQ,CAACZ,YAAY,CAACmB,YAAY,CAAC,CAAC;EACtC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}