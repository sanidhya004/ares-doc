{"ast":null,"code":"var _jsxFileName = \"/Users/charupatelbaghi/ares-elite/src/components/layout/DoctorSelectUser.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../styles/modal.css\";\nimport BootstrapModal from \"./Components/BootstrapModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoctorSelectUser = () => {\n  _s();\n  const [selectedUserType, setSelectedUserType] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = () => {\n    if (selectedUserType === \"New\") {\n      navigate(\"/doctor/dashboard/doctor-service-selection\");\n    } else if (selectedUserType === \"Existing\") {\n      console.log(\"modal opened for verification\");\n      setShowModal(true);\n    }\n  };\n  const handleUserTypeChange = userType => {\n    setSelectedUserType(userType);\n  };\n  const handleVerification = async email => {\n    console.log(email);\n    try {\n      await VerifyAthelete(dispatch, {\n        email\n      });\n    } catch (error) {\n      alert(error);\n    }\n    setShowModal(false); // Close the modal after verification\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"text-center d-flex flex-column justify-content-center align-items-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/areseliteLogo.png\",\n        width: 100,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Please select Type of user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap justify-content-center \",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `doctor-user-type ${selectedUserType === \"New\" ? \"selected\" : \"\"}`,\n          onClick: () => handleUserTypeChange(\"New\"),\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `doctor-user-type ${selectedUserType === \"Existing\" ? \"selected\" : \"\"}`,\n          onClick: () => handleUserTypeChange(\"Existing\"),\n          children: \"Existing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        className: \"purple-button \",\n        style: {\n          width: \"332px\",\n          height: \"62px\"\n        },\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapModal, {\n      showModal: showModal,\n      handleClose: () => setShowModal(false),\n      modalTitle: \"Please enter email to verify\",\n      modalContent: /*#__PURE__*/_jsxDEV(ModalContent, {\n        handleClose: () => setShowModal(false),\n        handleVerification: handleVerification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this),\n      className: \"verification-athelete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DoctorSelectUser, \"9CIp4igifwJNNEC4Ezw6Uj+WYu8=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorSelectUser;\nexport default DoctorSelectUser;\nconst ModalContent = ({\n  handleClose,\n  handleVerification\n}) => {\n  _s2();\n  const [email, setEmail] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleVerification(email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Enter Existing Email ID\",\n        onChange: e => setEmail(e.target.value),\n        value: email,\n        className: \"mb-3 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClose,\n        className: \"bt-2 w-25\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bt-2 w-25 bt-3\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s2(ModalContent, \"Pe1zWWKcsJK82m3WyFiCTurRPxo=\");\n_c2 = ModalContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"DoctorSelectUser\");\n$RefreshReg$(_c2, \"ModalContent\");","map":{"version":3,"names":["React","useState","Button","Form","useNavigate","BootstrapModal","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorSelectUser","_s","selectedUserType","setSelectedUserType","showModal","setShowModal","navigate","handleSubmit","console","log","handleUserTypeChange","userType","handleVerification","email","VerifyAthelete","dispatch","error","alert","children","className","src","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","height","handleClose","modalTitle","modalContent","ModalContent","_c","_s2","setEmail","e","preventDefault","onSubmit","Control","type","name","placeholder","onChange","target","value","_c2","$RefreshReg$"],"sources":["/Users/charupatelbaghi/ares-elite/src/components/layout/DoctorSelectUser.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../styles/modal.css\";\nimport BootstrapModal from \"./Components/BootstrapModal\";\n\nconst DoctorSelectUser = () => {\n  const [selectedUserType, setSelectedUserType] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    if (selectedUserType === \"New\") {\n      navigate(\"/doctor/dashboard/doctor-service-selection\");\n    } else if (selectedUserType === \"Existing\") {\n      console.log(\"modal opened for verification\");\n      setShowModal(true);\n    }\n  };\n\n  const handleUserTypeChange = (userType) => {\n    setSelectedUserType(userType);\n  };\n\n  const handleVerification = async (email) => {\n    console.log(email);\n    try {\n      await VerifyAthelete(dispatch, { email });\n    } catch (error) {\n      alert(error);\n    }\n    setShowModal(false); // Close the modal after verification\n  };\n\n  return (\n    <>\n      <section className=\"text-center d-flex flex-column justify-content-center align-items-center \">\n        <img src=\"/images/areseliteLogo.png\" width={100} alt=\"logo\" />\n        <h5>Please select Type of user</h5>\n\n        <div className=\"d-flex flex-wrap justify-content-center \">\n          <button\n            className={`doctor-user-type ${\n              selectedUserType === \"New\" ? \"selected\" : \"\"\n            }`}\n            onClick={() => handleUserTypeChange(\"New\")}\n          >\n            New\n          </button>\n          <button\n            className={`doctor-user-type ${\n              selectedUserType === \"Existing\" ? \"selected\" : \"\"\n            }`}\n            onClick={() => handleUserTypeChange(\"Existing\")}\n          >\n            Existing\n          </button>\n        </div>\n        <Button\n          onClick={handleSubmit}\n          className=\"purple-button \"\n          style={{ width: \"332px\", height: \"62px\" }}\n        >\n          Continue\n        </Button>\n      </section>\n      <BootstrapModal\n        showModal={showModal}\n        handleClose={() => setShowModal(false)}\n        modalTitle={\"Please enter email to verify\"}\n        modalContent={\n          <ModalContent\n            handleClose={() => setShowModal(false)}\n            handleVerification={handleVerification}\n          />\n        }\n        className=\"verification-athelete\"\n      />\n    </>\n  );\n};\n\nexport default DoctorSelectUser;\n\nconst ModalContent = ({ handleClose, handleVerification }) => {\n  const [email, setEmail] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleVerification(email);\n  };\n\n  return (\n    <section>\n      <Form onSubmit={handleSubmit}>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter Existing Email ID\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          className=\"mb-3 \"\n        />\n        <button type=\"button\" onClick={handleClose} className=\"bt-2 w-25\">\n          Close\n        </button>\n        <button type=\"submit\" className=\"bt-2 w-25 bt-3\">\n          Verify\n        </button>\n      </Form>\n    </section>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}